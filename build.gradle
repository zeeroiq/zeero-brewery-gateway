plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'com.palantir.docker' version '0.25.0'
}

group = 'com.shri.brewery'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.2.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:1.0.4.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.2.RELEASE'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}


// configuration of docker task
apply plugin: 'com.palantir.docker'
bootJar {
    layered {
        enabled = true
        includeLayerTools = true
    }
}

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'zeeroiq'
String imageName = "${dockerHubUsernameProperty}/${project.name}:$version"
docker {
    name imageName
    dockerfile file('src/main/docker/Dockerfile')
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()] as Map<String, String>)
    labels(['project':project.name])
    noCache true
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
